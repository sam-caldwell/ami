// file: bufio.ami
// (c) 2025 Asymmetric-Effort, LLC.
package main:0.0.1

import ami/stdlib/bufio >= v0.0.0
import github.com/asymmetric-effort/ami/stdio >= v0.0.0

pipeline BufferedWrite {
  Ingress(
    name=BufferedWrite,
    in=edge.FIFO(minCapacity=1,maxCapacity=8,backpressure=block,type=WriterPair),
    worker=func(e Event<WriterPair>)(Event<bool>, error){
      w, err := bufio.NewWriterSize(e.payload.w, 4096)
      if err != nil { return nil, err }
      _, _ = w.Write([]byte("hello"))
      if err := w.Flush(); err != nil { return nil, err }
      return Event<bool>(true)
    },
    minWorkers=1,maxWorkers=2,onError=ErrorPipeline,type=bool,
  ).Egress(
    in=edge.FIFO(minCapacity=1,maxCapacity=8,backpressure=block,type=bool),
    worker=func(e Event<bool>){ stdio.Println(e.payload) },
    minWorkers=1,maxWorkers=1,onError=ErrorPipeline,capabilities=[],
  )
}

