package token

// String returns a stable debug name for the token kind.
func (k Kind) String() string {
    switch k {
    case Unknown:
        return "Unknown"
    case EOF:
        return "EOF"
    case Ident:
        return "Ident"
    case Number:
        return "Number"
    case String:
        return "String"
    case DurationLit:
        return "Duration"
    case Symbol:
        return "Symbol"
    case Assign:
        return "Assign"
    case Plus:
        return "Plus"
    case Minus:
        return "Minus"
    case Star:
        return "Star"
    case Slash:
        return "Slash"
    case Percent:
        return "Percent"
    case Bang:
        return "Bang"
    case Eq:
        return "Eq"
    case Ne:
        return "Ne"
    case Lt:
        return "Lt"
    case Gt:
        return "Gt"
    case Le:
        return "Le"
    case Ge:
        return "Ge"
    case And:
        return "And"
    case Or:
        return "Or"
    case BitAnd:
        return "BitAnd"
    case BitXor:
        return "BitXor"
    case BitOr:
        return "BitOr"
    case Shl:
        return "Shl"
    case Shr:
        return "Shr"
    case Arrow:
        return "Arrow"
    case KwPackage:
        return "KwPackage"
    case KwImport:
        return "KwImport"
    case KwFunc:
        return "KwFunc"
    case KwReturn:
        return "KwReturn"
    case KwVar:
        return "KwVar"
    case KwDefer:
        return "KwDefer"
    case KwPipeline:
        return "KwPipeline"
    case KwIngress:
        return "KwIngress"
    case KwEgress:
        return "KwEgress"
    case KwError:
        return "KwError"
    case KwBool:
        return "KwBool"
    case KwByte:
        return "KwByte"
    case KwInt:
        return "KwInt"
    case KwInt8:
        return "KwInt8"
    case KwInt16:
        return "KwInt16"
    case KwInt32:
        return "KwInt32"
    case KwInt64:
        return "KwInt64"
    case KwInt128:
        return "KwInt128"
    case KwUint:
        return "KwUint"
    case KwUint8:
        return "KwUint8"
    case KwUint16:
        return "KwUint16"
    case KwUint32:
        return "KwUint32"
    case KwUint64:
        return "KwUint64"
    case KwUint128:
        return "KwUint128"
    case KwFloat32:
        return "KwFloat32"
    case KwFloat64:
        return "KwFloat64"
    case KwStringTy:
        return "KwString"
    case KwRune:
        return "KwRune"
    case KwAppend:
        return "KwAppend"
    case KwBreak:
        return "KwBreak"
    case KwCase:
        return "KwCase"
    case KwConst:
        return "KwConst"
    case KwClose:
        return "KwClose"
    case KwComplex:
        return "KwComplex"
    case KwComplex64:
        return "KwComplex64"
    case KwComplex128:
        return "KwComplex128"
    case KwContinue:
        return "KwContinue"
    case KwCopy:
        return "KwCopy"
    case KwDefault:
        return "KwDefault"
    case KwDelete:
        return "KwDelete"
    case KwElse:
        return "KwElse"
    case KwEnum:
        return "KwEnum"
    case KwErrorEvent:
        return "KwErrorEvent"
    case KwErrorPipeline:
        return "KwErrorPipeline"
    case KwEvent:
        return "KwEvent"
    case KwFallthrough:
        return "KwFallthrough"
    case KwFalse:
        return "KwFalse"
    case KwFloat:
        return "KwFloat"
    case KwFor:
        return "KwFor"
    case KwGoto:
        return "KwGoto"
    case KwIf:
        return "KwIf"
    case KwInterface:
        return "KwInterface"
    case KwLabel:
        return "KwLabel"
    case KwLatest:
        return "KwLatest"
    case KwLen:
        return "KwLen"
    case KwMake:
        return "KwMake"
    case KwMap:
        return "KwMap"
    case KwSet:
        return "KwSet"
    case KwSlice:
        return "KwSlice"
    case KwNew:
        return "KwNew"
    case KwNil:
        return "KwNil"
    case KwPanic:
        return "KwPanic"
    case KwRange:
        return "KwRange"
    case KwReal:
        return "KwReal"
    case KwRecover:
        return "KwRecover"
    case KwSelect:
        return "KwSelect"
    case KwState:
        return "KwState"
    case KwStruct:
        return "KwStruct"
    case KwSwitch:
        return "KwSwitch"
    case KwTrue:
        return "KwTrue"
    case KwType:
        return "KwType"
    case KwNodeTransform:
        return "KwNodeTransform"
    case KwNodeFanout:
        return "KwNodeFanout"
    case KwNodeCollect:
        return "KwNodeCollect"
    case KwNodeMutable:
        return "KwNodeMutable"
    case LParenSym:
        return "LParen"
    case RParenSym:
        return "RParen"
    case LBraceSym:
        return "LBrace"
    case RBraceSym:
        return "RBrace"
    case LBracketSym:
        return "LBracket"
    case RBracketSym:
        return "RBracket"
    case CommaSym:
        return "Comma"
    case SemiSym:
        return "Semi"
    case DotSym:
        return "Dot"
    case ColonSym:
        return "Colon"
    case PipeSym:
        return "Pipe"
    case BackslashSym:
        return "Backslash"
    case DollarSym:
        return "Dollar"
    case TickSym:
        return "Tick"
    case TildeSym:
        return "Tilde"
    case QuestionSym:
        return "Question"
    case AtSym:
        return "At"
    case PoundSym:
        return "Pound"
    case CaretSym:
        return "Caret"
    case SingleQuoteSym:
        return "SingleQuote"
    case DoubleQuoteSym:
        return "DoubleQuote"
    case LineComment:
        return "LineComment"
    case BlockComment:
        return "BlockComment"
    default:
        return "Unknown"
    }
}
